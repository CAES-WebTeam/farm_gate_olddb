@page "/admin/admin"
@using farmGate.Shared.Models
@using farmGate.Client.Services
@inject CommodityService commodityService
@inject CategoryService categoryService

<h1>Admin: Commodities</h1>

<!-- Form to add new commodity -->
<form @onsubmit="AddCommodity">
    <div class="form-group">
        <label for="commodityName">Enter commodity name:</label>
        <input id="commodityName" class="form-control" @bind="newCommodity.Name" placeholder="Commodity name" />
    </div>
    <div class="form-group">
        <label for="categorySelect">Please choose category of commodity (required):</label>
        <select id="categorySelect" class="form-control" @bind="selectedCategoryId">
            <option value="">Select Category</option>
            @foreach (var category in categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Add</button>
</form>

<h2>Current Commodities</h2>
<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr class="d-flex">
                @foreach (var category in categories)
                {
                    <th class="col">
                        <button class="btn btn-link" @onclick="() => ToggleCategory(category.Id)">
                            <i class="@(isExpanded[category.Id] ? "bi bi-arrows-collapse" : "bi bi-arrows-expand")"></i>
                            @category.Name
                        </button>
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            <tr class="d-flex">
                @foreach (var category in categories)
                {
                    <td class="col">
                        @if (isExpanded[category.Id])
                        {
                            <ul>
                                @foreach (var commodity in commodities.Where(c => c.CategoryId == category.Id))
                                {
                                    <li>@commodity.Name</li>
                                }
                            </ul>
                        }
                    </td>
                }
            </tr>
        </tbody>
    </table>
</div>
@code {
    private List<Commodity> commodities;
    private List<Category> categories;
    private Commodity newCommodity = new Commodity();
    private int selectedCategoryId;
    private Dictionary<int, bool> isExpanded = new Dictionary<int, bool>();

    protected override async Task OnInitializedAsync()
    {
        commodities = await commodityService.GetAllCommoditiesAsync();
        categories = await categoryService.GetCategoriesAsync();

        // Initialize the isExpanded dictionary
        foreach (var category in categories)
        {
            isExpanded[category.Id] = false;
        }
    }

    private void ToggleCategory(int categoryId)
    {
        isExpanded[categoryId] = !isExpanded[categoryId];
    }

    private async Task AddCommodity()
    {
        newCommodity.CategoryId = selectedCategoryId;
        var addedCommodity = await commodityService.AddCommodityAsync(newCommodity);
        commodities.Add(addedCommodity);
        newCommodity = new Commodity(); // Reset the form
    }
}
